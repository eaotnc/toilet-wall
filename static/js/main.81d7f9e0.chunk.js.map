{"version":3,"sources":["sky/item.js","sky/index.js","firebase.js","home/index.js","App.js","serviceWorker.js","index.js"],"names":["Item","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","style","transform","concat","from","Math","random","setStyle","bind","assertThisInitialized","setTimeout","movingStyle","window","innerHeight","innerWidth","_this$props","time","size","position","zIndex","transition","MsTransform","MsTransition","Webkitransform","WebkitTransition","overflow","willChange","imgSize","width","height","setState","_this2","_this$state","react_default","a","createElement","es","background","hideGrid","canvasWidth","canvasHeight","immediateLoading","ref","canvasDraw","loadableCanvas","saveData","savedPicture","React","Component","Sky","moves","initState","pictureAmount","i","push","movement","rotation","fromX","fromY","toX","toY","savedPictureList","outerStyle","top","left","margin","padding","console","log","id","map","e","conditional","floor","length","item","to","key","children","defaultProps","db","firebase","initializeApp","apiKey","authDomain","projectId","firestore","Home","color","toString","brushRadius","lazyRadius","oldpic","loading","handleSavePicture","handleRandomColor","ParseData","JSON","parse","saveableCanvas","getSaveData","data","lines","toConsumableArray","collection","doc","set","vector","get","then","querySnapshot","docs","_this3","className","sky","min","es_button","onClick","borderRadius","brushColor","clear","undo","marginLeft","App","home","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.81d7f9e0.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport CanvasDraw from 'react-canvas-draw'\r\n\r\nclass Item extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      style: {\r\n        transform: `translate(${this.props.from[0]}px, ${this.props.from[1]}px) rotate(${Math.random() * 360}deg)`,\r\n      },\r\n    }\r\n    this.setStyle = this.setStyle.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n    setTimeout(this.setStyle, 1)\r\n  }\r\n\r\n  setStyle() {\r\n    const movingStyle = `translate(${Math.random() * window.innerHeight * 2}px, ${Math.random() * window.innerWidth * 2}px) rotate(${Math.random() * 360}deg)`\r\n    const { time, size } = this.props\r\n    const style = {\r\n      position: 'absolute',\r\n      zIndex: '-1',\r\n      transform: movingStyle,\r\n      transition: `transform ${time}s ease-out`,\r\n      MsTransform: movingStyle,\r\n      MsTransition: `transform ${time}s ease-out`,\r\n      Webkitransform: movingStyle,\r\n      WebkitTransition: `transform ${time}s ease-out`,\r\n      overflow: 'visible',\r\n      willChange: 'transform',\r\n    }\r\n    const imgSize = {\r\n      width: size,\r\n      height: 'auto',\r\n    }\r\n    this.setState({\r\n      style,\r\n      size: imgSize,\r\n    })\r\n    setTimeout(this.setStyle, time * 1000)\r\n  }\r\n\r\n  render() {\r\n    const { style, size } = this.state\r\n\r\n    return (\r\n      <div style={style}>\r\n        <CanvasDraw\r\n          style={{ background: '#ff000000' }}\r\n          hideGrid\r\n          canvasWidth={190}\r\n          canvasHeight={150}\r\n          immediateLoading\r\n          ref={(canvasDraw) => (this.loadableCanvas = canvasDraw)}\r\n          saveData={this.props.savedPicture}\r\n        />\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nItem.propTypes = {\r\n  time: PropTypes.number.isRequired,\r\n  size: PropTypes.string.isRequired,\r\n  from: PropTypes.array.isRequired,\r\n  what: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Item\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Item from './item'\r\n\r\nclass Sky extends React.Component {\r\n    state = {\r\n      moves: [],\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.initState()\r\n    }\r\n\r\n    componentWillReceiveProps() {\r\n      this.initState()\r\n    }\r\n\r\n   initState=() => {\r\n     const { pictureAmount } = this.props\r\n     const moves = []\r\n     for (let i = 0; i < pictureAmount; i += 1) {\r\n       moves.push(this.movement())\r\n     }\r\n     this.setState({ moves })\r\n   }\r\n\r\n   movement=() => {\r\n     //  const rotation = Math.floor((Math.round(Math.random()) * 2 - 1) * 600)\r\n     //  const fromX = Math.floor((Math.random() * window.innerWidth))\r\n     //  const fromY = Math.floor((Math.random() * window.innerHeight))\r\n     //  const toX = Math.floor((Math.random() * window.innerWidth) * (Math.round(Math.random()) * 2 - 1))\r\n     //  const toY = Math.floor(((Math.random() * window.innerHeight) * (Math.round(Math.random()) * 2 - 1)) )\r\n\r\n     const temp = {\r\n       rotation: 5,\r\n       fromX: 250,\r\n       fromY: 200,\r\n       toX: 10,\r\n       toY: 20,\r\n     }\r\n     return temp\r\n   }\r\n\r\n   render() {\r\n     const {\r\n       savedPictureList, background, size, time,\r\n     } = this.props\r\n     const outerStyle = {\r\n       position: 'absolute',\r\n       top: '0',\r\n       left: '0',\r\n       width: '100%',\r\n       height: '100%',\r\n       margin: '0',\r\n       padding: '0',\r\n       overflow: 'hidden',\r\n       zIndex: '-1',\r\n       background,\r\n     }\r\n     console.log('state.move', this.state.moves)\r\n     return (\r\n       <div style={outerStyle} id=\"sky\">\r\n         {this.state.moves.map((e, i) => {\r\n           const conditional = Math.floor(Math.random() * savedPictureList.length)\r\n           console.log('contitional', conditional)\r\n           return (\r\n             <Item\r\n               savedPicture={savedPictureList[conditional]}\r\n               from={[e.fromX, e.fromY]}\r\n               to={[e.toX, e.toY]}\r\n               rotation={e.rotation}\r\n               size={size}\r\n               time={time}\r\n               key={i}\r\n             >\r\n               {this.props.children}\r\n             </Item>\r\n           )\r\n         })}\r\n       </div>\r\n     )\r\n   }\r\n}\r\n\r\nSky.defaultProps = {\r\n  size: '150px',\r\n  background: '',\r\n  time: 20,\r\n  children: null,\r\n}\r\n\r\nSky.propTypes = {\r\n  children: PropTypes.object,\r\n  size: PropTypes.string,\r\n  background: PropTypes.string,\r\n  time: PropTypes.number,\r\n  pictureAmount: PropTypes.any.isRequired,\r\n  savedPictureList: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default Sky\r\n","import firebase from \"firebase\";\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n    apiKey: 'AIzaSyDPSLUchbojKkZQI2oMLa5eUB67Qyyg65w',\r\n        authDomain: 'toilet-wall.firebaseapp.com',\r\n        projectId: 'toilet-wall'\r\n});\r\n\r\nconst db = firebaseApp.firestore();\r\n\r\nexport { db };","import React, { Component } from 'react'\r\nimport CanvasDraw from 'react-canvas-draw'\r\nimport firebase from 'firebase'\r\nimport { Button } from 'antd'\r\nimport './App.css'\r\nimport 'antd/dist/antd.css'\r\nimport Sky from '../sky'\r\nimport { db } from '../firebase'\r\n\r\nclass Home extends Component {\r\n  state = {\r\n    color: `#${Math.floor(Math.random() * 16777215).toString(16)}`,\r\n    width: 400,\r\n    height: 350,\r\n    brushRadius: 3,\r\n    lazyRadius: 5,\r\n    oldpic: [],\r\n    savedPictureList: [],\r\n    loading: true,\r\n  };\r\n\r\n  componentDidMount() {\r\n    db.collection('toilet-wall').get().then((querySnapshot) => {\r\n      const data = querySnapshot.docs.map((doc) => doc.data().vector)\r\n      this.setState({ oldpic: data, loading: false })\r\n    })\r\n  }\r\n\r\n  handleSavePicture=() => {\r\n    this.handleRandomColor()\r\n    const ParseData = JSON.parse(this.saveableCanvas.getSaveData())\r\n    const data = this.saveableCanvas.getSaveData()\r\n    if (ParseData.lines.length > 0) {\r\n      this.setState({\r\n        savedPictureList: [\r\n          ...this.state.savedPictureList,\r\n          data],\r\n      })\r\n      db.collection('toilet-wall').doc().set({\r\n        vector: data,\r\n      })\r\n    }\r\n  }\r\n\r\n  handleRandomColor=() => {\r\n    this.setState({ color: `#${Math.floor(Math.random() * 16777215).toString(16)}` })\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      savedPictureList, oldpic, color, brushRadius, lazyRadius, width, height, loading,\r\n    } = this.state\r\n    return (\r\n      <div className=\"App\">\r\n        {!loading\r\n          ? (\r\n            <Sky\r\n              size=\"50px\"\r\n              time={20}\r\n              pictureAmount={Math.min(savedPictureList.length + oldpic.length + 5, 40)}\r\n              savedPictureList={[...oldpic, ...savedPictureList]}\r\n            />\r\n          )\r\n          : null}\r\n        <div className=\"canvas-drower \">\r\n          <Button className=\"refresh-bt\" onClick={this.handleRandomColor}>refresh</Button>\r\n          <div className=\"label\">Toilet Wall</div>\r\n\r\n          <CanvasDraw\r\n            style={{ background: '#6b6b6b47', zIndex: '25', borderRadius: '14px' }}\r\n            hideGrid\r\n            ref={(canvasDraw) => (this.saveableCanvas = canvasDraw)}\r\n            brushColor={color}\r\n            brushRadius={brushRadius}\r\n            lazyRadius={lazyRadius}\r\n            canvasWidth={width}\r\n            canvasHeight={height}\r\n          />\r\n\r\n          <div>\r\n            <Button onClick={() => { this.handleSavePicture() }}> Save</Button>\r\n            <Button onClick={() => { this.saveableCanvas.clear() }}>Clear</Button>\r\n            <Button onClick={() => { this.saveableCanvas.undo() }}>Undo</Button>\r\n            <Button style={{ marginLeft: '10px' }} onClick={this.handleRandomColor}> change Color  </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Home\r\n","import React, { Component } from \"react\";\r\nimport Home from './home'\r\nimport {db }from './firebase'\r\n\r\nconst App =()=>(<Home />)\r\n\r\n\r\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}